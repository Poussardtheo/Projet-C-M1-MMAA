#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

int main() {
    // Nom du fichier PPM
    string filename = "image.ppm";
    
    // Ouverture du fichier en mode binaire
    ifstream file(filename, ios::binary);
    if (!file) {
        cerr << "Erreur : Impossible d'ouvrir le fichier " << filename << endl;
        return 1;
    }
    
    // Lecture des informations de l'en-tête
    string magic_number;
    int width, height, max_value;
    file >> magic_number >> width >> height >> max_value;
    // P6 : binaire, P3 : Ascii 
    if (magic_number != "P6" || magic_number != "P3" || max_value != 255) {
        cerr << "Erreur : Format de fichier non supporté" << endl;
        return 1;
    }
    
    // Lecture des données de l'image
    vector<unsigned char> data(width * height * 3);
    file.read(reinterpret_cast<char*>(data.data()), data.size());
    if (!file) {
        cerr << "Erreur : Impossible de lire les données de l'image" << endl;
        return 1;
    }
    
    // Affichage des données sous forme matricielle
    for (int y = 0; y < height; ++y) {
        for (int x = 0; x < width; ++x) {
            int index = (y * width + x) * 3;
            cout << static_cast<int>(data[index]) << " ";
            cout << static_cast<int>(data[index + 1]) << " ";
            cout << static_cast<int>(data[index + 2]) << " ";
        }
        cout << endl;
    }
    
    return 0;
}
